<Window
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:Converters="clr-namespace:PWARAbilityTool.Client.Converters" x:Class="PWARAbilityTool.Client.Ui.WarAbilitiesBuffCommandsPage"
      mc:Ignorable="d"
      x:Name="AbilitiesBuffCommandPage"
      Title="{Binding WindowTitle}"
      Height="469" Width="695" WindowStartupLocation="CenterScreen" Icon="/AbilityTool;component/Images/AppIcon.jpg">
    <Window.Resources>
        <Converters:BuffClassStringConverter x:Key="BuffClassStringConverter" />
        <Converters:ConsumesStackConverter x:Key="ConsumesStackConverter" />
        <Converters:NoAutoUseConverter x:Key="NoAutoUseConverter" />
        <Converters:EventIdStringConverter x:Key="EventIdStringConverter" />
        <Converters:InvokeOnConverter x:Key="InvokeOnConverter" />
        <Converters:BuffCmdEffectSourceConverter x:Key="BuffCmdEffectSourceConverter" />
        <Converters:BuffCmdTargetConverter x:Key="BuffCmdTargetConverter" />
        <x:Array x:Key="targets" Type="sys:String">
            <sys:String>Host</sys:String>
            <sys:String>Enemy</sys:String>
            <sys:String>Caster</sys:String>
            <sys:String>Ally</sys:String>
            <sys:String>AllyOrSelf</sys:String>
            <sys:String>Group</sys:String>
            <sys:String>Groupmates</sys:String>
            <sys:String>EventInstigator</sys:String>
            <sys:String>CareerTarget</sys:String>
        </x:Array>
        <x:Array x:Key="consumesStack" Type="sys:String">
            <sys:String>no</sys:String>
            <sys:String>yes</sys:String>
        </x:Array>
        <x:Array x:Key="noAutoUse" Type="sys:String">
            <sys:String>no</sys:String>
            <sys:String>yes</sys:String>
        </x:Array>
        <x:Array x:Key="effectSource" Type="sys:String">
            <sys:String>Host</sys:String>
            <sys:String>Caster</sys:String>
            <sys:String>EventInstigator</sys:String>
        </x:Array>
        <x:Array x:Key="eventIdStrings" Type="sys:String">
            <sys:String>DealingDamage</sys:String>
            <sys:String>AbilityStarted</sys:String>
            <sys:String>WasAttacked</sys:String>
            <sys:String>DirectDamageDealt</sys:String>
            <sys:String>DefendedAgainst</sys:String>
            <sys:String>WasDefended</sys:String>
            <sys:String>AttackedTarget</sys:String>
            <sys:String>DirectHealDealt</sys:String>
            <sys:String>DirectDamageReceived</sys:String>
            <sys:String>ShieldPass</sys:String>
            <sys:String>OnAcceptResurrection</sys:String>
            <sys:String>DirectHealReceived</sys:String>
            <sys:String>OnKill</sys:String>
            <sys:String>ReceivingDamage</sys:String>
            <sys:String>ReceivedDamage</sys:String>
            <sys:String>ResourceSet</sys:String>
            <sys:String>ShieldChanged</sys:String>
            <sys:String>Manual</sys:String>
            <sys:String>MainWeaponChanged</sys:String>
            <sys:String>AbilityCasted</sys:String>
            <sys:String>ResourceLost</sys:String>
            <sys:String>OnDie</sys:String>
            <sys:String>PetEvent</sys:String>
            <sys:String>DealingHeal</sys:String>
            <sys:String>ResourceGained</sys:String>
            <sys:String>ReceivingHeal</sys:String>
            <sys:String>DealtDamage</sys:String>
        </x:Array>
        <x:Array x:Key="eventCheck" Type="sys:String">
            <sys:String>AllowDismount</sys:String>
            <sys:String>DamageThrottle</sys:String>
            <sys:String>IsFlanking</sys:String>
            <sys:String>DamageIsCritical</sys:String>
            <sys:String>CheckDefenseFlags</sys:String>
            <sys:String>IsSingleTargetDamage</sys:String>
            <sys:String>DamageIsFromStat</sys:String>
            <sys:String>DamageIsFromMagicType</sys:String>
            <sys:String>TOIWithinRange</sys:String>
            <sys:String>DamageIsMeleeAbility</sys:String>
            <sys:String>TargetNotCaster</sys:String>
            <sys:String>DamageIsInTree</sys:String>
            <sys:String>CheckDefenseFlagsNotSelf</sys:String>
            <sys:String>DamageIsCriticalFromTree</sys:String>
            <sys:String>TargetHPBelow</sys:String>
            <sys:String>InstigatorHPBelow</sys:String>
            <sys:String>InstigatorNotSelf</sys:String>
            <sys:String>StealthBreak</sys:String>
            <sys:String>IsBehind</sys:String>
            <sys:String>MutatedCritical</sys:String>
            <sys:String>IsFlankingWithAbility</sys:String>
            <sys:String>GiftOfKhaine</sys:String>
            <sys:String>DamageIsFromID</sys:String>
        </x:Array>
        <x:Array x:Key="buffClassStrings" Type="sys:String">
            <sys:String>Standard</sys:String>
            <sys:String>Morale</sys:String>
            <sys:String>Tactic</sys:String>
            <sys:String>Career</sys:String>
            <sys:String>Persist</sys:String>
            <sys:String>MaxBuffClasses</sys:String>
        </x:Array>
        <x:Array x:Key="invokeOns" Type="sys:String">
            <sys:String>EventOnly</sys:String>
            <sys:String>Start</sys:String>
            <sys:String>Tick</sys:String>
            <sys:String>StartAndTick</sys:String>
            <sys:String>End</sys:String>
            <sys:String>StartAndEnd</sys:String>
            <sys:String>TickAndEnd</sys:String>
            <sys:String>All</sys:String>
            <sys:String>ChannelOverride</sys:String>
        </x:Array>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Label Content="Entry:" />
            <TextBox x:Name="entryBox" MinWidth="100" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.Entry, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="Name:" />
            <TextBox x:Name="Name" MinWidth="200" Margin="5,5,5,5" />
            <Label Content="commandId:" />
            <TextBox x:Name="cmdId" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.CommandID, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="commandSequence:" />
            <TextBox x:Name="cmdSequence" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.CommandSequence, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel Grid.Row="3" Orientation="Horizontal">
            <Label Content="primary Value:" />
            <TextBox x:Name="primaryVal" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.PrimaryValue, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="secondary Value:" />
            <TextBox x:Name="secVal" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.SecondaryValue, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="tertiary Value:" />
            <TextBox x:Name="tertVal" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.TertiaryValue, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="effect radius:" />
            <TextBox x:Name="effectRadius" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.EffectRadius, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="effect angle:" />
            <TextBox x:Name="effectAngle" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.EffectAngle, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="max Targets:" />
            <TextBox x:Name="maxTargets" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.MaxTargets, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel Grid.Row="5" Orientation="Horizontal">
            <Label Content="event check param:" />
            <TextBox x:Name="ecparam" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.EventCheckParam, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="eventchance:" />
            <TextBox x:Name="eChance" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.EventChance, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="Buffline:" />
            <TextBox x:Name="buffLine" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.BuffLine, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="RetriggerInterval:" />
            <TextBox x:Name="retriggerInterval" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.RetriggerInterval, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel Grid.Row="7" Orientation="Horizontal">
            <Label Content="Invoke on:" />
            <TextBox x:Name="invokeOn" MinWidth="50" Margin="5,5,5,5"
                     Text="{Binding AbilityBuffCommandsModel.InvokeOn, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="CommandName:" />
            <ComboBox x:Name="CommandName" Margin="5,5,5,5" ItemsSource="{Binding commandNames}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.CommandName, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="Target:" />
            <ComboBox x:Name="Target" Margin="5,5,5,5" ItemsSource="{StaticResource targets}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.Target, Converter={StaticResource BuffCmdTargetConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="EffectSource:" />
            <ComboBox x:Name="EffectSource" Margin="5,5,5,5" ItemsSource="{StaticResource effectSource}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.EffectSource, Converter={StaticResource BuffCmdEffectSourceConverter}, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel Grid.Row="9" Orientation="Horizontal">
            <Label Content="EventIDString:" />
            <ComboBox x:Name="EventIDString" Margin="5,5,5,5" ItemsSource="{StaticResource eventIdStrings}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.EventIDString, Converter={StaticResource EventIdStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="EventCheck:" />
            <ComboBox x:Name="EventCheck" Margin="5,5,5,5" ItemsSource="{StaticResource eventCheck}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.EventCheck, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="ConsumesStack:" />
            <ComboBox x:Name="ConsumesStack" Margin="5,5,5,5" ItemsSource="{StaticResource consumesStack}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.ConsumesStack, Converter={StaticResource ConsumesStackConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="NoAutoUse:" />
            <ComboBox x:Name="NoAutoUse" Margin="5,5,5,5" ItemsSource="{StaticResource noAutoUse}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.NoAutoUse, Converter={StaticResource NoAutoUseConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="BuffClassString:" />
            <ComboBox x:Name="BuffClassString" Margin="5,5,5,5" ItemsSource="{StaticResource buffClassStrings}"
                     SelectedItem="{Binding AbilityBuffCommandsModel.BuffClassString, Converter={StaticResource BuffClassStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <Button Grid.Row="15" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Width="50" Height="20" Content="Save" Command="{Binding SaveCommand, Mode=OneWay}" />
    </Grid>
</Window>