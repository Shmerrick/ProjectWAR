// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace FrameWork {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class VerifyProtocolReqProto {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_login_proto_VerifyProtocolReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::FrameWork.VerifyProtocolReq, global::FrameWork.VerifyProtocolReq.Builder> internal__static_login_proto_VerifyProtocolReq__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static VerifyProtocolReqProto() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cht3YXIvVmVyaWZ5UHJvdG9jb2xSZXEucHJvdG8SC2xvZ2luLnByb3RvGiRn" + 
          "b29nbGUvcHJvdG9idWYvY3NoYXJwX29wdGlvbnMucHJvdG8iXAoRVmVyaWZ5" + 
          "UHJvdG9jb2xSZXESGAoQcHJvdG9jb2xfdmVyc2lvbhgBIAIoDRISCgpwcm9k" + 
          "dWN0X2lkGAIgAigNEhkKEWNsaWVudF9wdWJsaWNfa2V5GAMgAigMQibCPiMK" + 
          "CUZyYW1lV29yaxIWVmVyaWZ5UHJvdG9jb2xSZXFQcm90bw==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_login_proto_VerifyProtocolReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_login_proto_VerifyProtocolReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::FrameWork.VerifyProtocolReq, global::FrameWork.VerifyProtocolReq.Builder>(internal__static_login_proto_VerifyProtocolReq__Descriptor,
                new string[] { "ProtocolVersion", "ProductId", "ClientPublicKey", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class VerifyProtocolReq : pb::GeneratedMessage<VerifyProtocolReq, VerifyProtocolReq.Builder> {
    private VerifyProtocolReq() { }
    private static readonly VerifyProtocolReq defaultInstance = new VerifyProtocolReq().MakeReadOnly();
    private static readonly string[] _verifyProtocolReqFieldNames = new string[] { "client_public_key", "product_id", "protocol_version" };
    private static readonly uint[] _verifyProtocolReqFieldTags = new uint[] { 26, 16, 8 };
    public static VerifyProtocolReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override VerifyProtocolReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override VerifyProtocolReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::FrameWork.VerifyProtocolReqProto.internal__static_login_proto_VerifyProtocolReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<VerifyProtocolReq, VerifyProtocolReq.Builder> InternalFieldAccessors {
      get { return global::FrameWork.VerifyProtocolReqProto.internal__static_login_proto_VerifyProtocolReq__FieldAccessorTable; }
    }
    
    public const int ProtocolVersionFieldNumber = 1;
    private bool hasProtocolVersion;
    private uint protocolVersion_;
    public bool HasProtocolVersion {
      get { return hasProtocolVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProtocolVersion {
      get { return protocolVersion_; }
    }
    
    public const int ProductIdFieldNumber = 2;
    private bool hasProductId;
    private uint productId_;
    public bool HasProductId {
      get { return hasProductId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProductId {
      get { return productId_; }
    }
    
    public const int ClientPublicKeyFieldNumber = 3;
    private bool hasClientPublicKey;
    private pb::ByteString clientPublicKey_ = pb::ByteString.Empty;
    public bool HasClientPublicKey {
      get { return hasClientPublicKey; }
    }
    public pb::ByteString ClientPublicKey {
      get { return clientPublicKey_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProtocolVersion) return false;
        if (!hasProductId) return false;
        if (!hasClientPublicKey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _verifyProtocolReqFieldNames;
      if (hasProtocolVersion) {
        output.WriteUInt32(1, field_names[2], ProtocolVersion);
      }
      if (hasProductId) {
        output.WriteUInt32(2, field_names[1], ProductId);
      }
      if (hasClientPublicKey) {
        output.WriteBytes(3, field_names[0], ClientPublicKey);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProtocolVersion) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, ProtocolVersion);
        }
        if (hasProductId) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, ProductId);
        }
        if (hasClientPublicKey) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, ClientPublicKey);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static VerifyProtocolReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static VerifyProtocolReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static VerifyProtocolReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static VerifyProtocolReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static VerifyProtocolReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static VerifyProtocolReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static VerifyProtocolReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static VerifyProtocolReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static VerifyProtocolReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static VerifyProtocolReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private VerifyProtocolReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(VerifyProtocolReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<VerifyProtocolReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(VerifyProtocolReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private VerifyProtocolReq result;
      
      private VerifyProtocolReq PrepareBuilder() {
        if (resultIsReadOnly) {
          VerifyProtocolReq original = result;
          result = new VerifyProtocolReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override VerifyProtocolReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::FrameWork.VerifyProtocolReq.Descriptor; }
      }
      
      public override VerifyProtocolReq DefaultInstanceForType {
        get { return global::FrameWork.VerifyProtocolReq.DefaultInstance; }
      }
      
      public override VerifyProtocolReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is VerifyProtocolReq) {
          return MergeFrom((VerifyProtocolReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(VerifyProtocolReq other) {
        if (other == global::FrameWork.VerifyProtocolReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProtocolVersion) {
          ProtocolVersion = other.ProtocolVersion;
        }
        if (other.HasProductId) {
          ProductId = other.ProductId;
        }
        if (other.HasClientPublicKey) {
          ClientPublicKey = other.ClientPublicKey;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_verifyProtocolReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _verifyProtocolReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasProtocolVersion = input.ReadUInt32(ref result.protocolVersion_);
              break;
            }
            case 16: {
              result.hasProductId = input.ReadUInt32(ref result.productId_);
              break;
            }
            case 26: {
              result.hasClientPublicKey = input.ReadBytes(ref result.clientPublicKey_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProtocolVersion {
        get { return result.hasProtocolVersion; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProtocolVersion {
        get { return result.ProtocolVersion; }
        set { SetProtocolVersion(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocolVersion(uint value) {
        PrepareBuilder();
        result.hasProtocolVersion = true;
        result.protocolVersion_ = value;
        return this;
      }
      public Builder ClearProtocolVersion() {
        PrepareBuilder();
        result.hasProtocolVersion = false;
        result.protocolVersion_ = 0;
        return this;
      }
      
      public bool HasProductId {
        get { return result.hasProductId; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProductId {
        get { return result.ProductId; }
        set { SetProductId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProductId(uint value) {
        PrepareBuilder();
        result.hasProductId = true;
        result.productId_ = value;
        return this;
      }
      public Builder ClearProductId() {
        PrepareBuilder();
        result.hasProductId = false;
        result.productId_ = 0;
        return this;
      }
      
      public bool HasClientPublicKey {
        get { return result.hasClientPublicKey; }
      }
      public pb::ByteString ClientPublicKey {
        get { return result.ClientPublicKey; }
        set { SetClientPublicKey(value); }
      }
      public Builder SetClientPublicKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientPublicKey = true;
        result.clientPublicKey_ = value;
        return this;
      }
      public Builder ClearClientPublicKey() {
        PrepareBuilder();
        result.hasClientPublicKey = false;
        result.clientPublicKey_ = pb::ByteString.Empty;
        return this;
      }
    }
    static VerifyProtocolReq() {
      object.ReferenceEquals(global::FrameWork.VerifyProtocolReqProto.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
